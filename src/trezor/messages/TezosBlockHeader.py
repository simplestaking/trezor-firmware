# Automatically generated by pb2py
# fmt: off
import protobuf as p


class TezosBlockHeader(p.MessageType):

    def __init__(
        self,
        level: int = None,
        proto: int = None,
        predecessor: bytes = None,
        timestamp: int = None,
        validation_pass: int = None,
        operations_hash: bytes = None,
        bytes_in_field_fitness: int = None,
        bytes_in_next_field: int = None,
        fitness: bytes = None,
        context: bytes = None,
        priority: int = None,
        proof_of_work_nonce: bytes = None,
        presence_of_field_seed_nonce_hash: bool = None,
        seed_nonce_hash: bytes = None,
    ) -> None:
        self.level = level
        self.proto = proto
        self.predecessor = predecessor
        self.timestamp = timestamp
        self.validation_pass = validation_pass
        self.operations_hash = operations_hash
        self.bytes_in_field_fitness = bytes_in_field_fitness
        self.bytes_in_next_field = bytes_in_next_field
        self.fitness = fitness
        self.context = context
        self.priority = priority
        self.proof_of_work_nonce = proof_of_work_nonce
        self.presence_of_field_seed_nonce_hash = presence_of_field_seed_nonce_hash
        self.seed_nonce_hash = seed_nonce_hash

    @classmethod
    def get_fields(cls):
        return {
            1: ('level', p.UVarintType, 0),
            2: ('proto', p.UVarintType, 0),
            3: ('predecessor', p.BytesType, 0),
            4: ('timestamp', p.UVarintType, 0),
            5: ('validation_pass', p.UVarintType, 0),
            6: ('operations_hash', p.BytesType, 0),
            7: ('bytes_in_field_fitness', p.UVarintType, 0),
            8: ('bytes_in_next_field', p.UVarintType, 0),
            9: ('fitness', p.BytesType, 0),
            10: ('context', p.BytesType, 0),
            11: ('priority', p.UVarintType, 0),
            12: ('proof_of_work_nonce', p.BytesType, 0),
            13: ('presence_of_field_seed_nonce_hash', p.BoolType, 0),
            14: ('seed_nonce_hash', p.BytesType, 0),
        }
