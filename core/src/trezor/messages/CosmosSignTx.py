# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .Fee import Fee
from .Msg import Msg

if __debug__:
    try:
        from typing import Dict, List, Optional
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        Dict, List, Optional = None, None, None  # type: ignore


class CosmosSignTx(p.MessageType):
    MESSAGE_WIRE_TYPE = 804

    def __init__(
        self,
        address_n: List[int] = None,
        account_number: int = None,
        chain_id: str = None,
        fee: Fee = None,
        sequence: int = None,
        memo: str = None,
        msgs: Msg = None,
    ) -> None:
        self.address_n = address_n if address_n is not None else []
        self.account_number = account_number
        self.chain_id = chain_id
        self.fee = fee
        self.sequence = sequence
        self.memo = memo
        self.msgs = msgs

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('address_n', p.UVarintType, p.FLAG_REPEATED),
            2: ('account_number', p.UVarintType, 0),
            3: ('chain_id', p.UnicodeType, 0),
            4: ('fee', Fee, 0),
            5: ('sequence', p.UVarintType, 0),
            6: ('memo', p.UnicodeType, 0),
            7: ('msgs', Msg, 0),
        }
